tasks = [];
//get fastapi ws url
let url = window.location.origin;
let ws_url = url.replace("http://", "ws://");
ws_url = ws_url.replace("https://", "ws://");
ws_url = ws_url + "/result";
const socket = new WebSocket(ws_url);
//io(`${url}/ws`,{ autoConnect: false });

// Event handler for when the connection is established
socket.addEventListener("open", (event) => {
  console.log("Connected to server.");
});

socket.onmessage = (event) => {
  let data = JSON.parse(event.data);
  data = JSON.parse(data);
  handle_message(data["topic"], data["message"]);
};

function handle_message(topic, message) {
  if (topic == "result") {
    handle_result(message);
  }else if (topic == "timeout"){
    handle_timeout(message);
  }
}

const handle_result = async (data) => {
  if (data["status"] === "completed") {
    const img = document.createElement("img");
    const response = await fetch(`/result?path=${data["output_means"]}`);
    const blob = await response.blob();
    let image = URL.createObjectURL(blob);
    img.src = image;
    img.className = "img-fluid w-50";
    document.getElementById(`${data["task_id"]}_parent`).appendChild(img);
    document.getElementById(`${data["task_id"]}_status`).innerHTML =
      data["status"];
    tasks = tasks.filter((el) => el != data["task_id"]);
  } else {
    document.getElementById(`${data["task_id"]}_status`).innerHTML = data["status"];
  }
};

const handle_timeout = async (data) => {
  socket.send(data["task_id"])
}